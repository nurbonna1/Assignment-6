// Contains a function ArrMax.arrMax that finds and returns the largest element in the array a of length b.
// a & b are both supplied as arguments

// Put your code here.

// ArrMax01.tst
// Test case to find the maximum value in an array [3, 5, 2, 8, 4]

load ArrMax.vm
output-file ArrMax01.out
compare-to ArrMax01.cmp
output-list Stack 0

// Initialize the test environment
init

// Set the array values (using the pointer)
set pointer 0 3
set pointer 1 5
set pointer 2 2
set pointer 3 8
set pointer 4 4

// Call ArrMax.arrMax with base address and number of elements
push constant 0
push constant 5
call ArrMax.arrMax 2

// End the test script
output

// ArrMax02.tst
// Test case to find the maximum value in an array [1, 1, 1, 1, 1]

load ArrMax.vm
output-file ArrMax02.out
compare-to ArrMax02.cmp
output-list Stack 0

// Initialize the test environment
init

// Set the array values (using the pointer)
set pointer 0 1
set pointer 1 1
set pointer 2 1
set pointer 3 1
set pointer 4 1

// Call ArrMax.arrMax with base address and number of elements
push constant 0
push constant 5
call ArrMax.arrMax 2

// End the test script
output
// ArrMax03.tst
// Test case to find the maximum value in an array [9, -3, 0, 7, 5]

load ArrMax.vm
output-file ArrMax03.out
compare-to ArrMax03.cmp
output-list Stack 0

// Initialize the test environment
init

// Set the array values (using the pointer)
set pointer 0 9
set pointer 1 -3
set pointer 2 0
set pointer 3 7
set pointer 4 5

// Call ArrMax.arrMax with base address and number of elements
push constant 0
push constant 5
call ArrMax.arrMax 2

// End the test script
output
